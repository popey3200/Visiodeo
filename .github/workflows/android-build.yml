name: Build Android APK (Capacitor)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-android:
    name: Build Android APK (Capacitor)
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup Java (required by Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install prerequisites
        run: sudo apt-get update && sudo apt-get install -y unzip wget

      - name: Install Android command line tools and SDK (platform-tools, build-tools, platforms)
        run: |
          set -euo pipefail
          SDK_ROOT="${{ github.workspace }}/android-sdk"
          mkdir -p "$SDK_ROOT"
          cd "$SDK_ROOT"
          # download commandline tools (change URL if needed)
          echo "Downloading Android command line tools..."
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline.zip
          unzip -q cmdline.zip -d cmdline-temp
          mkdir -p cmdline-tools/latest
          # move cmdline tools into expected location
          mv cmdline-temp/cmdline-tools/* cmdline-tools/latest/ || true
          rm -rf cmdline.zip cmdline-temp
          # expose to PATH for this run
          echo "ANDROID_SDK_ROOT=$SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$SDK_ROOT/cmdline-tools/latest/bin:$SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV
          # install platform-tools, platforms and build-tools
          yes | "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK_ROOT" "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Accept Android SDK licenses
        run: |
          set -euo pipefail
          SDK_ROOT="${{ github.workspace }}/android-sdk"
          yes | "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK_ROOT" --licenses || true

      - name: Ensure web assets folder
        run: |
          if [ ! -d "www" ]; then
            mkdir -p www
            if [ -f "visiodeo.html" ]; then
              cp visiodeo.html www/index.html || true
            fi
          fi

      - name: Install dependencies (or install Capacitor if missing)
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            npm init -y
            npm install @capacitor/cli@latest @capacitor/core@latest --no-audit --no-fund --no-save
          fi

      - name: Ensure Capacitor Android project exists
        run: |
          npx cap --version
          if [ ! -d "android" ]; then
            echo "android/ not found — adding android platform"
            npx cap add android --no-interactive
          else
            echo "android/ exists — skipping cap add"
          fi

      - name: Copy web assets into native project
        run: npx cap copy android

      - name: Build APK (debug)
        working-directory: android
        run: ./gradlew assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: visiodeo-android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
